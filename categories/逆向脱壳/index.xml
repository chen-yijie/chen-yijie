<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>逆向脱壳 on 忆杰的博客 - 专注于软件逆向、调试、反调试、内核开发、硬件虚拟化</title>
    <link>https://xchen.com/categories/%E9%80%86%E5%90%91%E8%84%B1%E5%A3%B3/</link>
    <description>Recent content in 逆向脱壳 on 忆杰的博客 - 专注于软件逆向、调试、反调试、内核开发、硬件虚拟化</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 30 Apr 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://xchen.com/categories/%E9%80%86%E5%90%91%E8%84%B1%E5%A3%B3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ollvm代码虚拟化Windows编译和使用</title>
      <link>https://xchen.com/post/ollvm%E4%BB%A3%E7%A0%81%E8%99%9A%E6%8B%9F%E5%8C%96windows%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/ollvm%E4%BB%A3%E7%A0%81%E8%99%9A%E6%8B%9F%E5%8C%96windows%E7%BC%96%E8%AF%91%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>网上都是讲怎么样编译Ollvm给Android的二进制文件混淆，我有一个需求是需要在Windows上面使用混淆工具，所以在编译和使用Ollv</description>
    </item>
    
    <item>
      <title>卸载高版本iTunes，安装低版本iTunes</title>
      <link>https://xchen.com/post/%E5%8D%B8%E8%BD%BD%E9%AB%98%E7%89%88%E6%9C%ACitunes%E8%BF%90%E8%A1%8C%E4%BD%8E%E7%89%88%E6%9C%ACitunes/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/%E5%8D%B8%E8%BD%BD%E9%AB%98%E7%89%88%E6%9C%ACitunes%E8%BF%90%E8%A1%8C%E4%BD%8E%E7%89%88%E6%9C%ACitunes/</guid>
      <description>安装了高版本iTunes之后，再安装低版本会报错，安装不上，这里记录一下安装方法。 开始－运行，输入regedit，打开注册表： 将HKEY_L</description>
    </item>
    
    <item>
      <title>hashcat暴力破解密码</title>
      <link>https://xchen.com/post/hashcat%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E5%AF%86%E7%A0%81/</link>
      <pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/hashcat%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E5%AF%86%E7%A0%81/</guid>
      <description>最近参加看雪的CrackMe挑战赛, 因为我写的CrackMe使用了散列算法. 所以为了测试时间, 在网上发现一个暴力破解密码的好东西, hashcat 刚开始的</description>
    </item>
    
    <item>
      <title>为什么会有mov edi, edi</title>
      <link>https://xchen.com/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89mov-edi-edi/</link>
      <pubDate>Wed, 11 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%9C%89mov-edi-edi/</guid>
      <description>原来一直被windows上的一些固定汇编指令搞的有点糊涂, 各种说法其实都有, 比如这个mov edi, edi. 实际这个指令是干什么用的呢? 每个人都有不同的说</description>
    </item>
    
    <item>
      <title>Themida 脱壳1(IAT定位)</title>
      <link>https://xchen.com/post/themida-%E8%84%B1%E5%A3%B31/</link>
      <pubDate>Thu, 13 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/themida-%E8%84%B1%E5%A3%B31/</guid>
      <description>Themida1.3.5.5已经算是比较旧的版本了吧, 我想这个壳应该可以代表1.3.x以前的比如1.2什么的. 不带驱动的壳. 好吧, 就从它开始</description>
    </item>
    
    <item>
      <title>Themida脱壳2(IAT填写代码分析)</title>
      <link>https://xchen.com/post/themida%E8%84%B1%E5%A3%B32iat%E5%A1%AB%E5%86%99%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90-2/</link>
      <pubDate>Thu, 13 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/themida%E8%84%B1%E5%A3%B32iat%E5%A1%AB%E5%86%99%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90-2/</guid>
      <description>今天下午本来兴奋的以为可以拿那个Themida的壳来实验实验Oreans UnVirtualizer. 结果发现还是掉链子啊, 这个工具还是不行. 绝对的不行.还是老实一点,</description>
    </item>
    
    <item>
      <title>ACProtect v2.1.3版本脱壳.</title>
      <link>https://xchen.com/post/acprotect-v2-1-3%E7%89%88%E6%9C%AC%E8%84%B1%E5%A3%B3/</link>
      <pubDate>Fri, 07 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/acprotect-v2-1-3%E7%89%88%E6%9C%AC%E8%84%B1%E5%A3%B3/</guid>
      <description>我还是使用delphi7的例子..首先上来还是找OEP.. 这个OEP被偷的很过分啊, 如果不是使用退出法找到OEP.. 估计其他类似的程序够呛.</description>
    </item>
    
    <item>
      <title>手脱SoftDefender1.12版本壳</title>
      <link>https://xchen.com/post/%E6%89%8B%E8%84%B1softdefender1-12%E7%89%88%E6%9C%AC%E5%A3%B3/</link>
      <pubDate>Thu, 06 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/%E6%89%8B%E8%84%B1softdefender1-12%E7%89%88%E6%9C%AC%E5%A3%B3/</guid>
      <description>我使用加壳软件是:SoftDefender1.12, 还有一个最简单的delphi7程序, 只有一个窗口那种.SoftDefender1.12还</description>
    </item>
    
    <item>
      <title>脱一些简单的压缩壳</title>
      <link>https://xchen.com/post/%E8%84%B1%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%A3%B3/</link>
      <pubDate>Thu, 06 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/%E8%84%B1%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%A3%B3/</guid>
      <description>脱一些简单的压缩壳. 首先看看一个壳的基本流程 1:保存入口参数, 一般都有这一步了 2:获取外壳所需的地址, 比如LoadLibrary, GetProcAddress 3:解密</description>
    </item>
    
    <item>
      <title>各种程序的按钮事件</title>
      <link>https://xchen.com/post/%E5%90%84%E7%A7%8D%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8C%89%E9%92%AE%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Fri, 31 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://xchen.com/post/%E5%90%84%E7%A7%8D%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8C%89%E9%92%AE%E4%BA%8B%E4%BB%B6/</guid>
      <description>按钮事件找法 MFC程序: 方法1: OD命令：bp TranslateMessage MSG==WM_LBUTTONUP 点击按钮以后就断在CALL 到 TranslateMessage函数. 这时候按Ctrl+F9执</description>
    </item>
    
  </channel>
</rss>
